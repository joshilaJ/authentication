[{"D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\index.js":"1","D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\App.js":"2","D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\store\\auth-context.js":"3","D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\pages\\HomePage.js":"4","D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\pages\\AuthPage.js":"5","D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\components\\Layout\\Layout.js":"6","D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\components\\Profile\\UserProfile.js":"7","D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\components\\Auth\\AuthForm.js":"8","D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\components\\StartingPage\\StartingPageContent.js":"9","D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\components\\Layout\\MainNavigation.js":"10","D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\components\\Profile\\ProfileForm.js":"11","D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\components\\Auth\\Firebase-config.js":"12","D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\store\\useStore.js":"13"},{"size":352,"mtime":1620721508000,"results":"14","hashOfConfig":"15"},{"size":1063,"mtime":1647188519870,"results":"16","hashOfConfig":"15"},{"size":833,"mtime":1647000434070,"results":"17","hashOfConfig":"15"},{"size":171,"mtime":1620721508000,"results":"18","hashOfConfig":"15"},{"size":130,"mtime":1620721508000,"results":"19","hashOfConfig":"15"},{"size":246,"mtime":1620721508000,"results":"20","hashOfConfig":"15"},{"size":278,"mtime":1620721508000,"results":"21","hashOfConfig":"15"},{"size":3754,"mtime":1647188041358,"results":"22","hashOfConfig":"15"},{"size":240,"mtime":1620721508000,"results":"23","hashOfConfig":"15"},{"size":1323,"mtime":1647188221719,"results":"24","hashOfConfig":"15"},{"size":1605,"mtime":1647187019938,"results":"25","hashOfConfig":"15"},{"size":502,"mtime":1647103502584,"results":"26","hashOfConfig":"15"},{"size":483,"mtime":1647191328814,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"k74w83",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\index.js",[],["57","58"],"D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\App.js",[],"D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\store\\auth-context.js",[],"D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\pages\\HomePage.js",[],"D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\pages\\AuthPage.js",[],"D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\components\\Layout\\Layout.js",[],"D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\components\\Profile\\UserProfile.js",[],"D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\components\\Auth\\AuthForm.js",["59"],"import { useState, useRef, useContext } from 'react';\n\n// import AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\nimport {useHistory} from 'react-router-dom';\nimport { auth } from './Firebase-config';\nimport {  signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { FaGoogle } from 'react-icons/fa'\nimport useLogInStore from '../../store/useStore';\n\nconst AuthForm = () => {\n\n  // const logIntoken=useLogInStore(state=>state.token);\n  const logInStore=useLogInStore(state=>state.login);\n  // const logOutStore=useLogInStore(state=>state.logout);\n  const history=useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  // const authCtx = useContext(AuthContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // optional: Add validation\n\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url =\n        'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDWvD1kymdPolUevYtHiLcUYye3oWC9HHU';\n    } else {\n      url =\n        'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDWvD1kymdPolUevYtHiLcUYye3oWC9HHU';\n    }\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = 'Authentication failed!';\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        // authCtx.login(data.idToken);\n        logInStore(data.idToken);\n        history.replace('/');\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  const signInWithGoogle=()=>{\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(auth, provider)\n    .then((re)=>{\n      console.log(re)\n    }).catch((err)=>{\n      console.log(err)\n    })\n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input\n            type='password'\n            id='password'\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          )}\n          {isLoading && <p>Sending request...</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n         <FaGoogle onClick={signInWithGoogle} className={classes.image}></FaGoogle> \n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\components\\StartingPage\\StartingPageContent.js",[],"D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\components\\Layout\\MainNavigation.js",[],"D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\components\\Profile\\ProfileForm.js",["60","61","62"],"import { useRef, useContext } from 'react';\n\n// import AuthContext from '../../store/auth-context';\nimport classes from './ProfileForm.module.css';\nimport {useHistory} from 'react-router-dom';\nimport useLogInStore from '../../store/useStore';\n\nconst ProfileForm = () => {\n\n  const logIntoken=useLogInStore(state=>state.token);\n  const logInStore=useLogInStore(state=>state.login);\n  const logOutStore=useLogInStore(state=>state.logout);\n\n  const history=useHistory();\n  const newPasswordInputRef = useRef();\n  // const authCtx = useContext(AuthContext);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredNewPassword = newPasswordInputRef.current.value;\n\n    // add validation\n\n    fetch('https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyDWvD1kymdPolUevYtHiLcUYye3oWC9HHU', {\n      method: 'POST',\n      body: JSON.stringify({\n        // idToken: authCtx.token,\n        idToken:logIntoken,\n\n        password: enteredNewPassword,\n        returnSecureToken: false\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      // assumption: Always succeeds!\nhistory.replace('/');\n\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>New Password</label>\n        <input type='password' id='new-password' minLength=\"7\" ref={newPasswordInputRef} />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;","D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\components\\Auth\\Firebase-config.js",[],"D:\\React-Repository\\05-using-context-for-managing-auth-state\\src\\store\\useStore.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":28,"nodeType":"69","messageId":"70","endLine":1,"endColumn":38},{"ruleId":"67","severity":1,"message":"68","line":1,"column":18,"nodeType":"69","messageId":"70","endLine":1,"endColumn":28},{"ruleId":"67","severity":1,"message":"71","line":11,"column":9,"nodeType":"69","messageId":"70","endLine":11,"endColumn":19},{"ruleId":"67","severity":1,"message":"72","line":12,"column":9,"nodeType":"69","messageId":"70","endLine":12,"endColumn":20},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'logInStore' is assigned a value but never used.","'logOutStore' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]